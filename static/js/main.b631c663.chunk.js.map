{"version":3,"sources":["components/InitMenuButton.js","components/Menu.js","components/TransitionText.js","components/Init.js","functions/functions.js","components/Button.js","components/Result.js","components/Dropdownheader.js","components/HeaderTitle.js","components/HeaderAction.js","components/MapButton.js","components/Dropdown.js","components/DropdownName.js","components/DropdownQuality.js","components/CompleteSearch.js","routes/Route.js","App.js","serviceWorker.js","index.js"],"names":["InitMenuButton","props","type","id","className","onClick","children","Menu","useState","goName","setGoName","goProducer","setGoProducer","goQuality","setGoQuality","goComplete","setGoComplete","to","TransitionText","Init","repo","setRepo","veg","setVeg","welcome","setWelcome","showRedirectButton","setShowRedirectButton","enterTheSite","setEnterTheSite","useEffect","setTimeout","CSSTransition","in","appear","timeout","classNames","style","color","fontFamily","fontSize","apiRoot","functions","giveMeTheProducers","callbackProducers","producers","axiosRetry","axios","retries","get","then","response","data","catch","error","giveMeTheQualities","callbackQualities","qualities","giveMeTheNames","callbackNames","names","searchByProducerWithDropdown","producer","callback","url","encodeURIComponent","searchByNameWithDropdown","name","searchByQualityWithDropdown","quality","completeList","Button","Result","key","Dropdownheader","tabIndex","role","onKeyPress","HeaderTitle","title","HeaderAction","MapButton","Dropdown","open","setOpen","selection","setSelection","toggle","setProducers","setCarregaram","renderMsg","setRenderMsg","setInitialNotSend","renderApiResults","setRenderApiResults","backHome","setBackHome","recebi","setRecebi","map","item","_id","handleOnClick","prodToSend","length","elem","DropdownName","setNames","nameToSend","items","setQualities","qualityToSend","CompleteSearch","complete","setComplete","completedata","Routes","basename","exact","path","component","DropdownQuality","App","Route","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.b631c663.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst InitMenuButton = (props) => {\r\n    return (\r\n        <button\r\n            type=\"button\"\r\n            id={props.id}\r\n            className=\"btn btn-primary btn-lg btn-block\"\r\n            onClick={props.onClick}\r\n        >{props.children}\r\n        </button>\r\n    )\r\n}\r\nexport default InitMenuButton;","import React, { useState } from 'react';\nimport './Menu.css';\nimport { Redirect } from 'react-router-dom';\nimport InitMenuButton from './InitMenuButton';\n\nfunction Menu() {\n    const [goName, setGoName] = useState(false);\n    const [goProducer, setGoProducer] = useState(false);\n    const [goQuality, setGoQuality] = useState(false);\n    const [goComplete, setGoComplete] = useState(false);\n\n    const goToNameSearch = () => {\n        setGoName(true);\n    }\n\n    const goToProducerSearch = () => {\n        setGoProducer(true);\n    }\n\n    const goToQualitySearch = () => {\n        setGoQuality(true);\n    }\n\n    const goToCompleteResults = () => {\n        setGoComplete(true);\n    }\n\n    return (\n\n        <div className=\"container container-teste\">\n\n            <div className=\"row\">\n                <div id=\"envolvente-menu\">\n                    <div className=\"col\" id=\"buttons-stack\">\n                        <InitMenuButton id=\"name-button\" className=\"btn btn-primary btn-lg btn-block\" onClick={goToNameSearch}>Pesquisa por Nome </InitMenuButton>\n                        {goName ? <Redirect to=\"/nome\" /> : null}\n\n                        <InitMenuButton id=\"prod-button\" className=\"btn btn-primary btn-lg btn-block\" onClick={goToProducerSearch}> Pesquisa por Produtor </InitMenuButton>\n                        {goProducer ? <Redirect to=\"/produtor\" /> : null}\n\n                        <InitMenuButton id=\"qual-button\" className=\"btn btn-primary btn-lg btn-block\" onClick={goToQualitySearch}>Pesquisa por Qualidade </InitMenuButton>\n                        {goQuality ? <Redirect to=\"/qualidade\" /> : null}\n\n                        <InitMenuButton id=\"all-button\" className=\"btn btn-primary btn-lg btn-block\" onClick={goToCompleteResults}>Pesquisa completa</InitMenuButton>\n                        {goComplete ? <Redirect to=\"/todos-os-resultados\" /> : null}\n\n                    </div>\n                </div>\n            </div>\n        </div>\n    )\n}\nexport default Menu;\n\n\n\n","import React from 'react';\r\nimport './Init.css';\r\n\r\nconst TransitionText = (props) => {\r\n    return (\r\n        <div className=\"text-to-render\">\r\n            {props.children}\r\n        </div>\r\n    )\r\n}\r\nexport default TransitionText;","import React, { useEffect, useState } from 'react';\nimport { CSSTransition } from \"react-transition-group\";\nimport TransitionText from './TransitionText';\nimport './Init.css';\nimport { Redirect } from 'react-router-dom';\n\nfunction Init() {\n    const [repo, setRepo] = useState(false);\n    const [veg, setVeg] = useState(false);\n    const [welcome, setWelcome] = useState(false);\n    const [showRedirectButton, setShowRedirectButton] = useState(false);\n    const [enterTheSite, setEnterTheSite] = useState(false);\n\n    useEffect(() => {\n        setTimeout(() => { setRepo(true) }, 500);\n        setTimeout(() => { setVeg(true) }, 1000);\n        setTimeout(() => { setWelcome(true) }, 2000);\n        setTimeout(() => { setShowRedirectButton(true) }, 3000);\n        setTimeout(() => { setEnterTheSite(true) }, 4000);\n    }, []);\n\n    const go = () => {\n        setEnterTheSite(true);\n    }\n\n    return (\n        <div className=\"container vertical-center\">\n            <div className=\"row\">\n                <div className=\"col\">\n                    <div className=\"envolvente\">\n                        <CSSTransition in={repo} appear={true} timeout={500} classNames=\"fade\">\n                            <TransitionText> {repo ? <div className=\"transition-text\">Repositório de vinhos </div> : null} </TransitionText>\n                        </CSSTransition>\n\n                        <CSSTransition in={veg} appear={true} timeout={500} classNames=\"fade\">\n                            <div className=\"text-to-render\">  {veg ? <div className=\"transition-text\"> Animal Friendly </div> : null}</div>\n                        </CSSTransition>\n\n                        <CSSTransition in={welcome} appear={true} timeout={500} classNames=\"fade\">\n                            <div className=\"#wilkommen\">  {welcome ? <TransitionText>\n                                <p style={{ color: 'black', fontFamily: 'Sen', fontSize: '2rem' }}>Seja bem-vindo/a!</p> </TransitionText> : null} </div>\n                        </CSSTransition>\n\n                        <CSSTransition in={showRedirectButton} appear={true} timeout={1000} classNames=\"fade\">\n                            <div className=\"#show-me-the-button\">\n                                {showRedirectButton ?\n                                    <div id=\"redirect-not-aut\">\n                                        Se não for diretamente redirecionado, clique\n                                         <span className=\"enter\" onClick={go}> aqui</span>\n                                    </div>\n                                    :\n                                    null}\n                            </div>\n                        </CSSTransition>\n                        {enterTheSite ? <Redirect to=\"/menu\" /> : null}\n\n                    </div>\n                </div>\n            </div>\n        </div>\n    )\n}\nexport default Init;","import axios from 'axios';\nimport axiosRetry from 'axios-retry';\nconst apiRoot = \"https://bdv.glitch.me/api/wines\";\n\n\nconst giveMeTheProducers = (callbackProducers) => {\n    const producers = 'https://bdv.glitch.me/api/wines/get-producers';\n    axiosRetry(axios, { retries: 10 });\n    axios.get(producers)\n        .then(response => {\n            if (callbackProducers) {\n                callbackProducers(response.data);\n            }\n        })\n        .catch(error => {\n            // console.log('o erro ao obter os produtores é: ', error);  \n            axios.get(producers)\n                .then(response => {\n                    //console.log(response.data);\n                    if (callbackProducers) {\n                        callbackProducers(response.data);\n                    }\n                })\n        })\n\n\n}\n\nconst giveMeTheQualities = (callbackQualities) => {\n    const qualities = 'https://bdv.glitch.me/api/wines/get-qualities';\n    axiosRetry(axios, { retries: 10 });\n    axios.get(qualities)\n        .then(response => {\n            if (callbackQualities) {\n                callbackQualities(response.data);\n\n            }\n        })\n        .catch(error => {\n            axios.get(qualities)\n                .then(response => {\n                    if (callbackQualities) {\n                        callbackQualities(response.data);\n                    }\n                })\n        })\n}\n\nconst giveMeTheNames = (callbackNames) => {\n    const names = 'https://bdv.glitch.me/api/wines/get-names';\n    axiosRetry(axios, { retries: 10 });\n    axios.get(names)\n        .then(response => {\n            if (callbackNames) {\n                callbackNames(response.data);\n            }\n        })\n        .catch(error => {\n            axios.get(names)\n                .then(response => {\n                    if (callbackNames) {\n                        callbackNames(response.data);\n                    }\n                })\n        })\n}\n\n\n\nconst completeList = (callback) => {\n    axiosRetry(axios, { retries: 6 });\n    axios.get(apiRoot + '/get-full-list?fulllist=Enviar')\n        .then(response => {\n            if (callback) {\n                callback(response.data);\n            }\n        })\n        .catch(error => {\n            axios.get(apiRoot + '/get-full-list?fulllist=Enviar')\n                .then(response => {\n\n                    if (callback) {\n                        callback(response.data);\n                    }\n                })\n        })\n}\n\n\nconst searchByProducerWithDropdown = (producer, callback) => {\n    const query = '?prod=';\n    const url = apiRoot + '/list-by-producer/' + query + encodeURIComponent(producer);\n    axiosRetry(axios, { retries: 6 });\n    axios.get(url)\n        .then(response => {\n            if (callback) {\n                callback(response.data);\n            }\n        })\n        .catch(error => {\n            axios.get(url)\n                .then(response => {\n                    if (callback) {\n                        callback(response.data);\n                    }\n                })\n        })\n\n}\n\n\nconst searchByNameWithDropdown = (name, callback) => {\n\n    const query = '?wname=';\n    const url = apiRoot + '/find-a-wine/' + query + encodeURIComponent(name);\n    axiosRetry(axios, { retries: 6 });\n    axios.get(url)\n        .then(response => {\n            if (callback) {\n                callback(response.data);\n            }\n        })\n        .catch(error => {\n            axios.get(url)\n                .then(response => {\n                    if (callback) {\n                        callback(response.data);\n                    }\n                })\n\n        })\n\n\n}\n\n\nconst searchByQualityWithDropdown = (quality, callback) => {\n\n    const query = '?qual=';\n    const url = apiRoot + '/list-by-type-of-wine/' + query + encodeURIComponent(quality);\n    axiosRetry(axios, { retries: 6 });\n    axios.get(url)\n        .then(response => {\n            if (callback) {\n                callback(response.data);\n            }\n        })\n        .catch(error => {\n            axios.get(url)\n                .then(response => {\n                    if (callback) {\n                        callback(response.data);\n                    }\n                })\n        })\n}\n\nconst functions = {\n    giveMeTheProducers: giveMeTheProducers,\n    giveMeTheQualities: giveMeTheQualities,\n    giveMeTheNames: giveMeTheNames,\n    searchByProducerWithDropdown: searchByProducerWithDropdown,\n    searchByNameWithDropdown: searchByNameWithDropdown,\n    searchByQualityWithDropdown: searchByQualityWithDropdown,\n    completeList: completeList,\n}\nexport default functions;\n","import React from 'react';\r\nimport './Dropdown.css';\r\n\r\nconst Button = (props) => {\r\n    return (\r\n        <button className=\"btn btn-default send\"\r\n            onClick={props.onClick}>\r\n            {props.children}\r\n        </button>\r\n    )\r\n}\r\nexport default Button; \r\n","import React from 'react';\r\n\r\nexport default function Result(props) {\r\n    return (\r\n        <div className={props.className}\r\n            key={props.key}>\r\n            <ul>{props.children}</ul>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react';\r\n\r\nconst Dropdownheader = (props) => {\r\n    return (\r\n        <div tabIndex={0}\r\n            className=\"dd-header\"\r\n            role=\"button\"\r\n            onKeyPress={props.onKeyPress}\r\n            onClick={props.onClick}\r\n        > {props.children}\r\n\r\n        </div>\r\n    )\r\n}\r\nexport default Dropdownheader;\r\n","import React from 'react';\r\nimport './Dropdown.css';\r\n\r\nconst HeaderTitle = (props) => {\r\n    return (\r\n        <div className=\"dd-header-title\">\r\n            <p className=\"dd-header-title-bold\">{props.title} </p>\r\n        </div>\r\n    )\r\n}\r\nexport default HeaderTitle; ","import React from 'react';\r\n\r\nconst HeaderAction = (props) => {\r\n    return (\r\n        <div className=\"dd-header-action\">\r\n            <p>{props.children}</p>\r\n        </div>\r\n    )\r\n}\r\nexport default HeaderAction; ","import React from 'react';\r\n\r\nconst MapButton = (props) => {\r\n    return (\r\n        <>\r\n            <button id={props.id}\r\n                type=\"button\"\r\n                onClick={props.onClick}>\r\n                <span className=\"category\">{props.children}</span>\r\n            </button>\r\n        </>\r\n    )\r\n}\r\nexport default MapButton; ","import React, { useState, useEffect } from 'react';\nimport './Dropdown.css';\nimport functions from '../functions/functions';\nimport { Redirect } from 'react-router-dom';\nimport ReactLoading from \"react-loading\";\nimport Button from './Button';\nimport Result from './Result';\nimport Dropdownheader from './Dropdownheader';\nimport HeaderTitle from './HeaderTitle';\nimport HeaderAction from './HeaderAction';\nimport MapButton from './MapButton';\n\nfunction Dropdown({ title }) {\n    const [open, setOpen] = useState(false); //changes if dd is open /closed\n    const [selection, setSelection] = useState([]); //willl hold selected items\n    const toggle = () => setOpen(!open); //\n    const [producers, setProducers] = useState();\n    //const [arrayIsLoaded, setArrayIsLoaded] = useState(false);\n    const [, setCarregaram] = useState(false);\n    const [renderMsg, setRenderMsg] = useState('');\n    const [, setInitialNotSend] = useState('Ainda não enviou pedido para nenhum produtor. Selecione na lista o Produtor pretendido.');\n    const [renderApiResults, setRenderApiResults] = useState([]);\n    const [backHome, setBackHome] = useState(false);\n    const [recebi, setRecebi] = useState(false);\n\n    useEffect(() => {\n        functions.giveMeTheProducers(callbackProducers);\n    }, []);\n\n    const callbackProducers = (data) => {\n        setProducers(data);\n        setRecebi(true);\n    }\n\n    function handleOnClick(item) { // not including multiselection possibility\n        setSelection([item]);\n        // console.log(item['Produtor'], ' item');\n        setOpen(false);\n        setRenderMsg(`O Produtor selecionado é: ${item['Produtor']}. Para mais informações, clique em Enviar`)\n    }\n\n    function alguemClicouNoBotao() {\n        var prodToSend;\n        if (selection.length === 0) {\n            // console.log('Não selecionou nada ainda');\n            setRenderMsg('Por favor selecione um Produtor na lista.');\n            setInitialNotSend('');\n            return;\n        }\n        prodToSend = selection[0]['Produtor'];\n        functions.searchByProducerWithDropdown(prodToSend, callback);\n        //console.log(JSON.stringify(selection));\n        setCarregaram(true);\n        setRenderMsg('Os dados referentes à sua seleção são os seguintes:');\n    }\n\n    const callback = (data) => {\n        //console.log(data);\n        setRenderApiResults([...data]);\n    }\n\n    const back = () => {\n        setBackHome(true);\n    }\n\n    return (\n        <div className=\"contentor-de-fora\">\n            {recebi ?\n                <>\n                    <div className=\"dd-wrapper\">\n                        <Dropdownheader onKeyPress={() => toggle(!open)} onClick={() => toggle(!open)}>\n                            <HeaderTitle title={title} />\n                            <HeaderAction>{open ? 'Fechar' : 'Abrir'} </HeaderAction>\n                        </Dropdownheader>\n                        {\n                            open && (\n                                <ul className=\"dd-list\">\n                                    {producers.map(item => (\n                                        <div className=\"dd-list-item\"\n                                            key={item._id}>\n                                            <MapButton id=\"list-api\" type=\"button\" onClick={() => handleOnClick(item)}>\n                                                <span className=\"category\">{item['Produtor']}</span>\n                                            </MapButton>\n                                        </div>\n                                    ))}\n                                </ul>)\n                        }\n                    </div>\n\n                    <div className=\"row\">\n                        <div className=\"button-container\">\n                            <Button onClick={alguemClicouNoBotao}>Enviar</Button>\n                            <Button onClick={back}>Voltar</Button>\n                        </div>\n                    </div>\n                </>\n                :\n                <div className=\"out\">\n                    <div className=\"please-wait-loading-data\">\n                        <ReactLoading type=\"spokes\" color=\"#000\" />\n                    </div>\n                </div>\n            }\n\n            <div className=\"info-selected\">\n                {renderMsg}\n            </div>\n\n            <div>{renderApiResults ?\n                <div className=\"flatlist\">\n                    {\n                        renderApiResults.map(function (elem) {\n                            return (\n                                <Result className=\"text-results\" key={elem['_id']}>\n                                    <ul className=\"details\">{`Vinho ou Marca: ${elem['Vinho ou Marca']}`}</ul>\n                                    <ul className=\"details\">{`Produtor: ${elem['Produtor']}`} </ul>\n                                    <ul className=\"details\">{`Qualidade:  ${elem['Qualidade']}`} </ul>\n                                    <hr className=\"separator\" />\n                                </Result>\n                            )\n                        })}\n                </div>\n                : null}\n            </div>\n            {backHome ? <Redirect to=\"/menu\" /> : null}\n        </div>\n    )\n}\nexport default Dropdown;\n","import React, { useState, useEffect } from 'react';\nimport './Dropdown.css';\nimport functions from '../functions/functions';\nimport { Redirect } from 'react-router-dom';\nimport ReactLoading from \"react-loading\";\nimport Button from './Button';\nimport Result from './Result';\nimport Dropdownheader from './Dropdownheader';\nimport HeaderTitle from './HeaderTitle';\nimport HeaderAction from './HeaderAction';\nimport MapButton from './MapButton';\n\nfunction DropdownName({ title }) {\n\n    const [open, setOpen] = useState(false);\n    const [selection, setSelection] = useState([]);\n    const toggle = () => setOpen(!open);\n    const [names, setNames] = useState();\n    const [, setCarregaram] = useState(false);\n    const [renderMsg, setRenderMsg] = useState('');\n    const [, setInitialNotSend] = useState('Ainda não enviou pedido para nenhum produtor. Selecione na lista o Produtor pretendido.');\n    const [renderApiResults, setRenderApiResults] = useState([]);\n    const [backHome, setBackHome] = useState(false);\n    const [recebi, setRecebi] = useState(false);\n\n    useEffect(() => {\n        functions.giveMeTheNames(callbackNames);\n    }, []);\n\n    const callbackNames = (data) => {\n        setNames(data);\n        setRecebi(true);//alterar nomenclatura para arrayIsLoaded\n    }\n\n    const handleOnClick = (item) => {\n        setSelection([item]);\n        setOpen(false);\n        setRenderMsg(`O Vinho selecionado é: ${item['Vinho ou Marca']}. Para mais informações, clique em Enviar`);\n    }\n\n    const alguemClicouNoBotao = () => {\n        var nameToSend;\n        if (selection.length === 0) {\n            setRenderMsg('Por favor selecione um Vinho na lista.')\n            setInitialNotSend('');\n            return;\n        }\n        nameToSend = selection[0]['Vinho ou Marca'];\n        functions.searchByNameWithDropdown(nameToSend, callback);\n        setCarregaram(true);\n        setRenderMsg('Os dados referentes à sua seleção são os seguintes:');\n    }\n\n    const callback = (data) => {\n        setRenderApiResults([...data]);\n    }\n\n    const back = () => {\n        setBackHome(true);\n    }\n\n    return (\n        <div className=\"container contentor-de-fora\">\n            <div className=\"row\">\n                <div className=\"col\">\n                    {recebi ?\n                        <>\n                            <div className=\"dd-wrapper\">\n                                <Dropdownheader onKeyPress={() => toggle(!open)} onClick={() => toggle(!open)}>\n                                    <HeaderTitle title={title} />\n                                    <HeaderAction>{open ? 'Fechar' : 'Abrir'} </HeaderAction>\n                                </Dropdownheader>\n                                {open && (\n                                    <ul className=\"dd-list\">\n                                        {names.map(item => (\n                                            <div className=\"dd-list-item\" key={item._id}>\n                                                <MapButton id=\"list-api\" type=\"button\" onClick={() => handleOnClick(item)}>\n                                                    <span className=\"category\">{item['Vinho ou Marca']}</span>\n                                                </MapButton>\n                                            </div>\n                                        ))}\n                                    </ul>\n                                )}\n                            </div>\n                            <div className=\"row\">\n                                <div className=\"button-container\">\n                                    <Button onClick={alguemClicouNoBotao}>Enviar</Button>\n                                    <Button onClick={back}>Voltar</Button>\n                                </div>\n                            </div>\n                        </>\n                        :\n                        <div className=\"out\">\n                            <div className=\"please-wait-loading-data\">\n                                <ReactLoading type=\"spokes\" color=\"hotpink\" />\n                            </div>\n                        </div>\n                    }\n                    <div className=\"info-selected\">\n                        {renderMsg}\n                    </div>\n\n                    <div>{renderApiResults ?\n                        <div className=\"flatlist\">\n                            {renderApiResults.map(function (elem) {\n                                return (\n                                    <Result className=\"text-results\" key={elem['_id']}>\n                                        <ul className=\"details\">{`Vinho ou Marca: ${elem['Vinho ou Marca']}`}</ul>\n                                        <ul className=\"details\">{`Produtor: ${elem['Produtor']}`} </ul>\n                                        <ul className=\"details\">{`Qualidade:  ${elem['Qualidade']}`} </ul>\n                                        <hr className=\"separator\" />\n                                    </Result>\n                                )\n                            })}\n                        </div>\n                        : null}\n                    </div>\n                    {backHome ? <Redirect to=\"/menu\" /> : null}\n                </div>\n            </div>\n        </div>\n    )\n}\nexport default DropdownName;\n","import React, { useState, useEffect } from 'react';\nimport './Dropdown.css';\nimport functions from '../functions/functions';\nimport { Redirect } from 'react-router-dom';\nimport ReactLoading from \"react-loading\";\nimport Button from './Button';\nimport Result from './Result';\nimport Dropdownheader from './Dropdownheader';\nimport HeaderTitle from './HeaderTitle';\nimport HeaderAction from './HeaderAction';\nimport MapButton from './MapButton';\n\nfunction DropdownName({ title, items = false }) {\n    const [open, setOpen] = useState(false);\n    const [selection, setSelection] = useState([]);\n    const toggle = () => setOpen(!open);\n    const [qualities, setQualities] = useState();\n    const [carregaram, setCarregaram] = useState(false);\n    const [renderMsg, setRenderMsg] = useState('');\n    const [initialNotSend, setInitialNotSend] = useState('Ainda não enviou pedido para nenhum produtor. Selecione na lista o Produtor pretendido.');\n    const [renderApiResults, setRenderApiResults] = useState([]);\n    const [backHome, setBackHome] = useState(false);\n    const [recebi, setRecebi] = useState(false);\n\n    useEffect(() => {\n        functions.giveMeTheQualities(callbackQualities);\n    }, []);\n\n    const callbackQualities = (data) => {\n        setQualities(data);\n        setRecebi(true);\n    }\n\n    const handleOnClick = (item) => {\n        setSelection([item]);\n        setOpen(false);\n        setRenderMsg(`A Qualidade selecionada é: ${item['Qualidade']}. Para mais informações, clique em Enviar`);\n    }\n\n    const alguemClicouNoBotao = () => {\n        var qualityToSend;\n        if (selection.length === 0) {\n            setRenderMsg('Por favor selecione uma Qualidade na lista.');\n            setInitialNotSend('');\n            return;\n        }\n        qualityToSend = selection[0]['Qualidade'];\n        functions.searchByQualityWithDropdown(qualityToSend, callback);\n        setCarregaram(true);\n        setRenderMsg('Os dados referentes à sua seleção são os seguintes:');\n    }\n\n    const callback = (data) => {\n        setRenderApiResults([...data]);\n    }\n\n    const back = () => {\n        setBackHome(true);\n    }\n\n    return (\n        <div className=\"contentor-de-fora\">\n            {recebi ?\n                <>\n                    <div className=\"dd-wrapper\">\n                        <Dropdownheader onKeyPress={() => toggle(!open)} onClick={() => toggle(!open)}>\n                            <HeaderTitle title={title} />\n                            <HeaderAction>{open ? 'Fechar' : 'Abrir'} </HeaderAction>\n                        </Dropdownheader>\n                        {\n                            open && (\n                                <ul className=\"dd-list\">\n                                    {qualities.map(item => (\n                                        <div className=\"dd-list-item\"\n                                            key={item._id}>\n                                            <MapButton id=\"list-api\" type=\"button\" onClick={() => handleOnClick(item)}>\n                                                <span className=\"category\">{item['Qualidade']}</span>\n                                            </MapButton>\n                                        </div>\n                                    ))}\n                                </ul>\n                            )}\n                    </div>\n                    <div className=\"row\">\n                        <div className=\"button-container\">\n                            <Button onClick={alguemClicouNoBotao}>Enviar</Button>\n                            <Button onClick={back}>Voltar</Button>\n                        </div>\n                    </div>\n                </>\n                :\n                <div className=\"out\">\n                    <div className=\"please-wait-loading-data\">\n                        <ReactLoading type=\"spokes\" color=\"hotpink\" />\n                    </div>\n                </div>\n            }\n\n            <div className=\"info-selected\">\n                {renderMsg}\n            </div>\n\n            <div>{renderApiResults ?\n                <div className=\"flatlist\">\n                    {renderApiResults.map(function (elem) {\n                        return (\n                            <Result className=\"text-results\" key={elem['_id']}>\n                                <ul className=\"details\">{`Vinho ou Marca: ${elem['Vinho ou Marca']}`}</ul>\n                                <ul className=\"details\">{`Produtor: ${elem['Produtor']}`} </ul>\n                                <ul className=\"details\">{`Qualidade:  ${elem['Qualidade']}`} </ul>\n                                <hr className=\"separator\" />\n                            </Result>\n                        )\n                    })}\n                </div>\n                : null\n            }</div>\n            {backHome ? <Redirect to=\"/menu\" /> : null}\n        </div>\n    )\n}\nexport default DropdownName;\n","import React, { useState, useEffect } from 'react';\nimport ReactLoading from \"react-loading\";\nimport Result from './Result';\nimport Button from './Button';\nimport './CompleteSearch.css';\nimport functions from '../functions/functions';\nimport { Redirect } from 'react-router-dom';\n\nconst CompleteSearch = () => {\n    const [complete, setComplete] = useState();\n    const [backHome, setBackHome] = useState(false);\n    const [recebi, setRecebi] = useState(false);\n\n    useEffect(() => {\n        functions.completeList(callback);\n    }, []);\n\n    const callback = (completedata) => {\n        setComplete(completedata);\n        setRecebi(true);\n    }\n\n    const back = () => {\n        setBackHome(true);\n    }\n\n    return (\n        <div className=\"container all-entries\">\n            <div className=\"row\">\n                <div className=\"col datadb\">\n                    {\n                        recebi ?\n                            <><div className=\"res\">\n                                {complete.map(function (elem) {\n                                    return (\n                                        <Result className=\"datadb\" key={elem['_id']}>\n                                            <ul className=\"details\">{`Vinho ou Marca: ${elem['Vinho ou Marca']}`} </ul>\n                                            <ul className=\"details\">{`Produtor: ${elem['Produtor']}`} </ul>\n                                            <ul className=\"details\">{`Qualidade:  ${elem['Qualidade']}`} </ul>\n                                            <hr className=\"separator\" />\n                                        </Result>\n                                    )\n                                })}\n                            </div>\n                                <Button type=\"button\" className=\"btn btn-block completeback\" onClick={back}>Voltar</Button>\n                            </>\n                            :\n                            <ReactLoading type=\"spokes\" color=\"hotpink\" />\n                    }\n                </div>\n            </div>\n            {backHome ? <Redirect to=\"/menu\" /> : null}\n        </div>\n    )\n}\nexport default CompleteSearch;","import React from 'react';\nimport { HashRouter, Route } from 'react-router-dom';\nimport Menu from '../components/Menu';\nimport Init from '../components/Init';\nimport Dropdown from '../components/Dropdown';\nimport DropdownName from '../components/DropdownName';\nimport DropdownQuality from '../components/DropdownQuality';\nimport CompleteSearch from '../components/CompleteSearch';\n\nconst Routes = () => {\n\n    return (\n        <HashRouter basename='/' >\n            <Route exact path='/' component={Init} />\n            <Route path='/menu' component={Menu}/>\n            <Route path= '/produtor' component={Dropdown} /> \n            <Route path= '/nome' component={DropdownName} /> \n            <Route path= '/qualidade' component={DropdownQuality} /> \n            <Route path= '/todos-os-resultados' component={CompleteSearch} /> \n        </HashRouter>\n    )\n}\n\nexport default Routes;","import React from 'react';\nimport './App.css';\n//import Dropdown from './components/Dropdown';\nimport Routes from './routes/Route'\n\nfunction App() {\n\n  return (\n    <div className=\"App\">\n\n      <Routes />\n\n    </div>\n  );\n}\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}